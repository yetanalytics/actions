name: Clojars Deploy

description: Build JAR and Deploy to Clojars

inputs:
  group-id:
    descrption: Clojars Group ID (e.g. com.yetanalytics)
    required: true
    default: 'com.yetanalytics'

  artifact-id:
    description: Clojars Artifact ID (i.e. the name of the lib itself)
    required: true

  src-dir:
    description: The source directory (e.g. src/main)
    required: true
    default: 'src/main'

  resource-dir:
    description: The resource directory (e.g. resources)
    required: true
    default: 'resources'

  github-url:
    description: The GitHub URL
    required: true

  github-tag:
    description: The GitHub tag (e.g. a commit SHA or just HEAD)
    required: true
    default: HEAD

  github-conn:
    description: The GitHub connection URL
    required: true

  github-dev-conn:
    description: The GitHub developer connection URL
    required: true

  # Passing GH secrets as inputs seems kind of sketch...

  # clojars-username:
  #   description: The Clojars username GH secret
  #   required: true

  # clojars-token:
  #   description: The Clojars access token GH secret
  #   required: true

runs:
  using: "composite"
  steps:
    - name: Add aliases
      shell: bash
      run: clojure -Sdeps '{:aliases {:build {:replace-deps {io.github.seancorfield/build-clj {:git/tag "v0.6.3" :git/sha "9b8e09b"}} :ns-default build}}}'

    - name: Extract version
      id: version
      shell: bash
      run: echo ::set-output name=VERSION::${GITHUB_REF#refs\/tags\/v}

    - name: Build JAR file
      shell: bash
      run: >
        clojure -X:build jar
        :lib ${{ inputs.group-id }}/${{ inputs.artifact-id }}
        :version "${{ steps.versions.outputs.VERSION }}"
        :src-dirs ["${{ inputs.src-dirs }}"]
        :scm {
          :url ${{ inputs.github-url }}
          :tag ${{ inputs.github-tag }}
          :connection ${{ inputs.github-conn }}
          :dev-connection ${{ inputs.github-dev-conn }}
        }

    # This is mainly a debug step that exists to ensure sanity checking
    - name: Publish artifact
      uses: actions/upload-artifact@v2
      with:
        name: ${{ inputs.artifact-id }}-artifact-${{ steps.version.outputs.VERSION }}
        path: target/${{ inputs.artifact-id }}-${{ steps.version.outputs.VERSION }}

    # - name: Deploy to Clojars
    #   shell: bash
    #   run: >
    #     clojure -X:build deploy
    #     :lib ${{ inputs.group-id }}/${{ inputs.artifact-id }}
    #     :version "${{ steps.versions.outputs.VERSION }}"
    #   env:
    #     CLOJARS_USERNAME: ${{ inputs.clojars-username }}
    #     CLOJARS_PASSWORD: ${{ inputs.clojars-token }}
